[{"/Users/giuseppe/Desktop/progettoAlexCaraffi/frontend/src/index.js":"1","/Users/giuseppe/Desktop/progettoAlexCaraffi/frontend/src/reportWebVitals.js":"2","/Users/giuseppe/Desktop/progettoAlexCaraffi/frontend/src/js/App.js":"3","/Users/giuseppe/Desktop/progettoAlexCaraffi/frontend/src/js/Signup.js":"4","/Users/giuseppe/Desktop/progettoAlexCaraffi/frontend/src/js/Loggato.js":"5","/Users/giuseppe/Desktop/progettoAlexCaraffi/frontend/src/js/Login.js":"6","/Users/giuseppe/Desktop/progettoAlexCaraffi/frontend/src/js/Navbar.js":"7","/Users/giuseppe/Desktop/progettoAlexCaraffi/frontend/src/js/Soldi.js":"8","/Users/giuseppe/Desktop/progettoAlexCaraffi/frontend/src/js/NavbarLoggato.js":"9","/Users/giuseppe/Desktop/progettoAlexCaraffi/frontend/src/js/Home.js":"10","/Users/giuseppe/Desktop/progettoAlexCaraffi/frontend/src/js/Deposito.js":"11","/Users/giuseppe/Desktop/progettoAlexCaraffi/frontend/src/js/Withdraw.js":"12","/Users/giuseppe/Desktop/progettoAlexCaraffi/frontend/src/js/Buy.js":"13","/Users/giuseppe/Desktop/progettoAlexCaraffi/frontend/src/js/ListTransactions.js":"14"},{"size":507,"mtime":1655470075999,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":1644829089000,"results":"17","hashOfConfig":"16"},{"size":748,"mtime":1655842131212,"results":"18","hashOfConfig":"16"},{"size":3084,"mtime":1655842115981,"results":"19","hashOfConfig":"16"},{"size":2994,"mtime":1655842430609,"results":"20","hashOfConfig":"16"},{"size":1919,"mtime":1655842469639,"results":"21","hashOfConfig":"16"},{"size":424,"mtime":1645007553000,"results":"22","hashOfConfig":"16"},{"size":382,"mtime":1646245187000,"results":"23","hashOfConfig":"16"},{"size":966,"mtime":1655842484007,"results":"24","hashOfConfig":"16"},{"size":1283,"mtime":1655842267511,"results":"25","hashOfConfig":"16"},{"size":1495,"mtime":1655842239776,"results":"26","hashOfConfig":"16"},{"size":1954,"mtime":1655842533722,"results":"27","hashOfConfig":"16"},{"size":1927,"mtime":1655842187337,"results":"28","hashOfConfig":"16"},{"size":4926,"mtime":1655842393546,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"dmfsy1",{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"33"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"33"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"33"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"33"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"33"},"/Users/giuseppe/Desktop/progettoAlexCaraffi/frontend/src/index.js",[],[],["78","79"],"/Users/giuseppe/Desktop/progettoAlexCaraffi/frontend/src/reportWebVitals.js",[],[],"/Users/giuseppe/Desktop/progettoAlexCaraffi/frontend/src/js/App.js",[],[],"/Users/giuseppe/Desktop/progettoAlexCaraffi/frontend/src/js/Signup.js",[],[],"/Users/giuseppe/Desktop/progettoAlexCaraffi/frontend/src/js/Loggato.js",["80","81"],[],"import {BrowserRouter as Router, Route, Switch} from 'react-router-dom'; //servono per andare in diverse pagine\nimport Home from './Home';\nimport NavbarLoggato from './NavbarLoggato';\nimport Soldi from './Soldi';\nimport Deposito from './Deposito';\nimport Withdraw from './Withdraw';\nimport Buy from './Buy';\nimport ListTransactions from './ListTransactions';\nimport axios from 'axios';\nimport {useEffect} from 'react';\nimport {useState} from 'react';\n\nconst Loggato = () => {\n    const [nome, setNome] = useState('');\n    const [euro, setEuro] = useState(0);\n    const [dollari, setDollari] = useState(0);\n    const [getFoto, setGetFoto] = useState(null);\n\n    useEffect(async () => { //una volta caricata la pagina, controllo che il token sia valido e inserisco i valori dei soldi nella pagina html\n        const url = \"http://localhost:8000/query/\";\n        const risposta = await axios.post(url);\n        const oggetto = risposta.data;\n\n        if (oggetto[\"ridirezione\"]) {\n            alert('Sessione scaduta');\n            window.location.href = 'http://localhost:3000/';\n        }\n        else {\n            if (oggetto[\"isTuttoOk\"]) {\n                setNome(oggetto[\"nome\"][0].toUpperCase() + oggetto[\"nome\"].slice(1)); //metto la prima lettera maiuscola\n                setEuro(Number(oggetto[\"euro\"]).toFixed(2));\n                setDollari(Number(oggetto[\"dollari\"]).toFixed(2));\n            }\n            else\n                alert(oggetto[\"messaggio\"]);\n            \n        }\n\n        // prendo la foto profilo\n        const url2 = \"http://localhost:8000/getImage/\";\n        const risposta2 = await axios.get(url2, {responseType: \"blob\"});\n        getBase64(risposta2.data, (foto) => {setGetFoto(foto)});\n    });\n\n    function getBase64(file, cb) {\n        let reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onload = function () {\n            cb(reader.result)\n        };\n        reader.onerror = function (error) {\n            console.log('Error: ', error);\n        };\n    }\n\n    \n\n    return (\n        <Router>\n            <div className=\"loggato\">\n                <NavbarLoggato />\n                <Soldi euro={euro} dollari={dollari}/>\n\n                <Switch>\n                    <Route exact path='/home'>\n                        <Home nome={nome} foto={getFoto}/>\n                    </Route>\n\n                    <Route exact path='/deposit'>\n                        <Deposito />\n                    </Route>\n\n                    <Route exact path='/withdraw'>\n                        <Withdraw euro={euro} dollari={dollari}/>\n                    </Route>\n\n                    <Route exact path='/buy'>\n                        <Buy euro={euro} dollari={dollari}/>\n                    </Route>\n\n                    <Route exact path='/listTransactions'>\n                        <ListTransactions />\n                    </Route>\n                </Switch>\n                \n            </div>\n        </Router>\n    );\n}\nexport default Loggato;","/Users/giuseppe/Desktop/progettoAlexCaraffi/frontend/src/js/Login.js",[],[],"/Users/giuseppe/Desktop/progettoAlexCaraffi/frontend/src/js/Navbar.js",[],[],"/Users/giuseppe/Desktop/progettoAlexCaraffi/frontend/src/js/Soldi.js",[],[],"/Users/giuseppe/Desktop/progettoAlexCaraffi/frontend/src/js/NavbarLoggato.js",["82"],[],"import {Link} from 'react-router-dom'; //se usi link invece di <a href> non passi per il server\nimport '../css/NavbarLoggato.css';\nimport axios from 'axios';\n\nconst NavbarLoggato = () => {\n\n    const logout = async (e) => {\n        const url = 'http://localhost:8000/logout/';\n        const risposta = await axios.post(url);\n        window.location.href = 'http://localhost:3000/';\n    }\n    return (\n        <nav className=\"navbar\">\n            <div className=\"divLink\">\n                <Link to='/home' className='link'>Home</Link>\n                <Link to='/deposit' className='link'>Carica</Link>\n                <Link to='/withdraw' className='link'>Deposito</Link>\n                <Link to='/buy' className='link'>Converti</Link>\n                <Link to='/listTransactions' className='link'>Storico</Link>\n                <Link to = '/' onClick={logout} className='link'>Logout</Link>\n            </div>\n        </nav>\n    );\n}\n \nexport default NavbarLoggato\n","/Users/giuseppe/Desktop/progettoAlexCaraffi/frontend/src/js/Home.js",["83"],[],"import '../css/Home.css';\nimport axios from 'axios';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\naxios.defaults.withCredentials = true;\n\nconst Home = (props) => {\n    const nome = props.nome;\n    const getFoto = props.foto;\n\n    const [foto, setFoto] = useState();\n\n    const handleLoginForm = async (e) => {\n        const url = \"http://localhost:8000/uploadImage/\";\n\n        const dati = new FormData();\n        \n        dati.append(\"foto\", foto, foto.name);\n        \n        const body = {method: \"post\", url: url, data: dati, withCredentials: true, headers: { \"Content-Type\": \"multipart/form-data\" }}\n        const risposta = await axios (url, body);\n        const oggetto = risposta.data;\n        alert(oggetto.messaggio)\n    }\n\n    return (\n        <div className=\"divHome\">\n            <h1>Benvenuto</h1>\n            <h2>{nome}</h2>\n\n            <form encType=\"multipart/form-data\" onSubmit = {handleLoginForm}>\n\n                <input type=\"file\" onChange={e => setFoto(e.target.files[0])}/>\n                <button id='bottone' type='submit'> Invia</button>\n            </form>\n            {   !!getFoto && \n                <img src={getFoto} alt=\"Foto profilo\"/>\n            }\n\n            \n        </div> \n        \n\n\n    );\n}\n \nexport default Home;","/Users/giuseppe/Desktop/progettoAlexCaraffi/frontend/src/js/Deposito.js",[],[],"/Users/giuseppe/Desktop/progettoAlexCaraffi/frontend/src/js/Withdraw.js",[],[],"/Users/giuseppe/Desktop/progettoAlexCaraffi/frontend/src/js/Buy.js",["84"],[],"import '../css/Form.css';\nimport {useState} from 'react';\nimport axios from 'axios';\nconst Buy = (props) => {\n\n    const euro = props.euro;\n    const dollari = props.dollari;\n    const [max, setMax] = useState(dollari);\n\n    const handleLoginForm = async (e) => {\n        e.preventDefault(); //evita di ricaricare la pagina\n        const url = \"http://localhost:8000/buy/\";\n\n        const quantita_spesa = e.target.valore.value;\n        const valuta = e.target.valuta.value;\n\n        const corpo = {\n            valore: quantita_spesa,\n            valuta: valuta\n        };\n\n        const risposta = await axios.post(url, corpo);\n        const oggetto = risposta.data;\n\n        if (oggetto[\"ridirezione\"]) {\n            alert('Sessione scaduta');\n            window.location.href = 'http://localhost:3000/';\n        }\n        else {\n            alert (oggetto[\"messaggio\"]);\n            if (oggetto[\"isTuttoOk\"])\n                window.location.href = 'http://localhost:3000/home';\n        }\n    }\n\n    function cambiaMassimo(e) { //cambio del massimo nella form in base alla valuta selezionata\n        if (e.target.value == 'EUR')\n            setMax(euro);\n        \n        else   \n            setMax(dollari);\n    }\n\n    return (\n        <div className=\"divForm\">\n            <h1>Converti Valuta</h1>\n\n            <form id = \"form\" onSubmit = {handleLoginForm}>\n                <input className='testo' type='number' id='valore' name='valore' placeholder=\"Valore da convertire nell'altra valuta\" min='1' max={max} step=\"0.01\" required/><br /><br />\n                \n                <select id=\"valuta\" name=\"valuta\" form='form' onChange={cambiaMassimo}>\n                    <option value=\"USD\">USD</option>\n                    <option value=\"EUR\">EUR</option>\n                </select> <br /> <br />\n                <input id='bottoneInterno' type='submit'/>\n            </form>\n        </div> \n    );\n}\n \nexport default Buy;","/Users/giuseppe/Desktop/progettoAlexCaraffi/frontend/src/js/ListTransactions.js",["85","86","87","88","89","90","91","92","93","94","95"],[],"import '../css/Form.css';\nimport '../css/ListTransactions.css';\nimport {useEffect} from 'react';\nimport {useState} from 'react';\nimport axios from 'axios';\nconst parse = require('html-react-parser');\nconst ListTransactions = () => {\n\n    //const [tabella, setTabella] = useState('<tr><td></td><td></td><td></td></tr>');\n    const [tabella, setTabella] = useState('');\n    const url = \"http://localhost:8000/listTransactions/\";\n\n    useEffect(async () =>{ //una volta caricata la pagina, controllo che il token sia valido e inserisco i valori dei soldi nella pagina html\n\n        const posizioneValuta = window.location.href.indexOf('valuta='); //prendo il valore della valuta\n        let valuta = '';\n        if (posizioneValuta != -1)\n            valuta = window.location.href.slice(posizioneValuta+7, posizioneValuta+5+5);\n        \n\n        const posizioneData = window.location.href.indexOf('data='); //prendo il valore della data\n        let data = '';\n        if (posizioneData != -1)\n            data = window.location.href.slice(posizioneData+5, posizioneData+5+10);\n        \n\n        const corpo = {\n            valuta: valuta,\n            data: data\n        };\n\n        const risposta = await axios.post(url, corpo);\n        const oggetto = risposta.data;\n\n        //alert(oggetto[\"listaTransizioni\"])\n        \n        if (oggetto[\"ridirezione\"]) {\n            alert('Sessione scaduta');\n            window.location.href = 'http://localhost:3000/';\n        }\n        else {\n            if (oggetto[\"isTuttoOk\"])  {\n                if (oggetto[\"listaTransizioni\"] != '[]')\n                    creaTabella(oggetto[\"listaTransizioni\"]); //creo la tabella \n                \n            }\n            else\n                alert(oggetto[\"messaggio\"]);   \n        }\n    });\n\n    function creaTabella (lista) {\n        let nuovaTabella = '';\n        let valutaComprata = '';\n        let valutaSpesa = '';\n        for (let i = 0; i < lista.length; i++) {\n            if (i%2 == 1) //guardo se devo fare lo sfondo bianco o grigio\n                nuovaTabella = nuovaTabella + '<tr>';\n            \n            else\n                nuovaTabella = nuovaTabella + '<tr className = \"dispari\">';\n            \n            if (lista[i][\"valuta_comprata\"] == 'USD') { //setto le valute\n                valutaComprata = '$';\n                valutaSpesa = '€';\n            }\n            else {\n                valutaComprata = '€';\n                valutaSpesa = '$';\n            }\n\n            nuovaTabella = nuovaTabella + '<td>' + lista[i][\"quantita_spesa\"].toFixed(2) + \" \" + valutaSpesa + \"</td>\"; //spesa\n            nuovaTabella = nuovaTabella + '<td>' + lista[i][\"quantita_comprata\"].toFixed(2) + \" \" + valutaComprata + \"</td>\"; //comprata\n            nuovaTabella = nuovaTabella + '<td>' + giraData(lista[i][\"data\"]) + \"</td>\"; //data\n            //nuovaTabella = nuovaTabella + '<td>' + lista[i][\"data\"] + \"</td>\"; //data\n            nuovaTabella = nuovaTabella + '</tr>';\n        }\n        setTabella(nuovaTabella);\n    }\n\n    function giraData(data) {\n       //trasformo da anno mese giorno a giorno mese anno\n        return data.slice(8, 10)+'-'+data.slice(5, 7)+'-'+data.slice(0, 4);\n    }\n\n    const handleLoginForm = async (e) => {\n        e.preventDefault();\n        const data = e.target.data.value;\n        const valuta = e.target.valuta.value;\n\n        let nuovaQuery = 'http://localhost:3000/listTransactions';\n        if (data!='' || valuta!='') {\n            nuovaQuery = nuovaQuery+'?'\n            if (data!='' && valuta!='')\n                nuovaQuery = nuovaQuery+'data='+data+'&valuta='+valuta;\n            \n            else if (data!='')\n                nuovaQuery = nuovaQuery+'data='+data;\n            \n            else\n                nuovaQuery = nuovaQuery+'valuta='+valuta;\n        }\n        window.location.href = nuovaQuery;\n    }\n\n    return (\n        <div className=\"listTransactions\">\n            <h1>Storico delle transizioni</h1>\n\n            <table>\n                <thead>\n                    <tr>\n                        <th>Quantita Spesa</th>\n                        <th>Quantita Comprata</th>\n                        <th>Data</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {parse(tabella) /* creo la tabella*/ }\n                </tbody>\n            </table>\n            \n            <h2>Filtri</h2>\n            <form id = \"form\" onSubmit = {handleLoginForm}>\n                <input type=\"date\" id=\"data\" name=\"data\" /> <br /> <br />\n\n                <select id=\"valuta\" name=\"valuta\" form='form'>\n                    <option value=\"\">Nessuna</option>\n                    <option value=\"USD\">USD</option>\n                    <option value=\"EUR\">EUR</option>\n                </select> <br /> <br />\n                <input id='bottoneInterno' type='submit'/>\n            </form>\n        </div> \n    );\n}\n \nexport default ListTransactions;",{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","severity":1,"message":"101","line":19,"column":5,"nodeType":"102","endLine":19,"endColumn":14,"suggestions":"103"},{"ruleId":"100","severity":1,"message":"104","line":19,"column":15,"nodeType":"105","endLine":43,"endColumn":6},{"ruleId":"106","severity":1,"message":"107","line":9,"column":15,"nodeType":"102","messageId":"108","endLine":9,"endColumn":23},{"ruleId":"106","severity":1,"message":"109","line":4,"column":10,"nodeType":"102","messageId":"108","endLine":4,"endColumn":19},{"ruleId":"110","severity":1,"message":"111","line":37,"column":28,"nodeType":"112","messageId":"113","endLine":37,"endColumn":30},{"ruleId":"100","severity":1,"message":"104","line":13,"column":15,"nodeType":"105","endLine":50,"endColumn":6},{"ruleId":"110","severity":1,"message":"114","line":17,"column":29,"nodeType":"112","messageId":"113","endLine":17,"endColumn":31},{"ruleId":"110","severity":1,"message":"114","line":23,"column":27,"nodeType":"112","messageId":"113","endLine":23,"endColumn":29},{"ruleId":"110","severity":1,"message":"114","line":43,"column":49,"nodeType":"112","messageId":"113","endLine":43,"endColumn":51},{"ruleId":"110","severity":1,"message":"111","line":57,"column":21,"nodeType":"112","messageId":"113","endLine":57,"endColumn":23},{"ruleId":"110","severity":1,"message":"111","line":63,"column":45,"nodeType":"112","messageId":"113","endLine":63,"endColumn":47},{"ruleId":"110","severity":1,"message":"114","line":92,"column":17,"nodeType":"112","messageId":"113","endLine":92,"endColumn":19},{"ruleId":"110","severity":1,"message":"114","line":92,"column":31,"nodeType":"112","messageId":"113","endLine":92,"endColumn":33},{"ruleId":"110","severity":1,"message":"114","line":94,"column":21,"nodeType":"112","messageId":"113","endLine":94,"endColumn":23},{"ruleId":"110","severity":1,"message":"114","line":94,"column":35,"nodeType":"112","messageId":"113","endLine":94,"endColumn":37},{"ruleId":"110","severity":1,"message":"114","line":97,"column":26,"nodeType":"112","messageId":"113","endLine":97,"endColumn":28},"no-native-reassign",["115"],"no-negated-in-lhs",["116"],"react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setNome'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.","Identifier",["117"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","no-unused-vars","'risposta' is assigned a value but never used.","unusedVar","'useEffect' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","no-global-assign","no-unsafe-negation",{"desc":"118","fix":"119"},"Add dependencies array: []",{"range":"120","text":"121"},[1725,1725],", []"]