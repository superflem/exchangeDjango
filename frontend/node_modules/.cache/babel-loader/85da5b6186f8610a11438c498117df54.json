{"ast":null,"code":"var _jsxFileName = \"/Users/giuseppe/Desktop/progettoAlexCaraffi/frontend/src/js/Signup.js\",\n    _s = $RefreshSig$();\n\nimport { sha3_512 } from 'js-sha3';\nimport { useRef } from 'react';\nimport '../css/Form.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\naxios.defaults.withCredentials = true;\nexport const controllaEmail = function () {\n  let input = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  return input.includes(\"@\");\n}; // controlla che l'input della mail abbia la chiocciola\n\nexport const controllaPassword = function () {\n  let input = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  return input.length === 128;\n}; // controlla che l'input della password abbia 128 caratteri\n\nexport const controllaIban = function () {\n  let input = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  return input.length === 27;\n}; // controlla che l'input dell'iban abbia 27 caratteri\n\nconst Signup = () => {\n  _s();\n\n  const emailInput = useRef();\n  const nomeInput = useRef();\n  const cognomeInput = useRef();\n  const ibanInput = useRef();\n  const passwordInput = useRef();\n  const password2Input = useRef();\n\n  const handleLoginForm = async e => {\n    e.preventDefault(); //evita di ricaricare la pagina\n\n    const url = \"http://localhost:8000/signup/\";\n    const email = emailInput.current.value;\n    const nome = nomeInput.current.value;\n    const cognome = cognomeInput.current.value;\n    const iban = ibanInput.current.value;\n    const password2 = password2Input.current.value;\n    let password = passwordInput.current.value;\n\n    if (password !== password2) {\n      alert(\"le due password devono essere uguali\");\n      return;\n    }\n\n    password = sha3_512(password); //cifro la password\n    // controllo la email\n\n    if (!controllaEmail(email)) {\n      alert(\"La email non è valida\");\n      return;\n    } // controllo la password\n\n\n    if (!controllaPassword(password)) {\n      alert(\"La password non è valida\");\n      return;\n    } // controllo la password\n\n\n    if (!controllaIban(iban)) {\n      alert(\"L'iban non è valido\");\n      return;\n    }\n\n    const corpo = {\n      nome: nome,\n      cognome: cognome,\n      iban: iban,\n      email: email,\n      password: password,\n      withCredentials: true\n    }; //creo l'oggetto json da inviare al server\n\n    const risposta = await axios.post(url, corpo);\n    const oggetto = risposta.data;\n    alert(oggetto[\"messaggio\"]);\n\n    if (oggetto[\"isTuttoOk\"]) {\n      // se è tutto ok, mi loggo\n      const url2 = \"http://localhost:8000/login/\";\n      const body2 = {\n        email: email,\n        password: password,\n        withCredentials: true\n      };\n      await axios.post(url2, body2);\n      const link2 = window.location.href.replace('/signup', '/home'); //rimando alla pagina principale di login\n\n      window.location.replace(link2);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"divSignup\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Signup\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLoginForm,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"testo\",\n        type: \"text\",\n        id: \"nome\",\n        name: \"nome\",\n        placeholder: \"Nome\",\n        ref: nomeInput,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 123\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 129\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"testo\",\n        type: \"text\",\n        id: \"cognome\",\n        name: \"cognome\",\n        placeholder: \"Cognome\",\n        ref: cognomeInput,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 135\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 141\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"testo\",\n        type: \"email\",\n        id: \"email\",\n        name: \"email\",\n        placeholder: \"Email\",\n        ref: emailInput,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 127\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 133\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"testo\",\n        type: \"password\",\n        id: \"password\",\n        name: \"password\",\n        minLength: Number('8'),\n        placeholder: \"Password\",\n        ref: passwordInput,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 167\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 173\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"testo\",\n        type: \"password\",\n        id: \"password2\",\n        name: \"password2\",\n        minLength: Number('8'),\n        placeholder: \"Reinserisci la password\",\n        ref: password2Input,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 185\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 191\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"testo\",\n        type: \"text\",\n        id: \"iban\",\n        name: \"iban\",\n        maxLength: Number('27'),\n        minLength: Number('27'),\n        placeholder: \"IBAN (senza spazi)\",\n        ref: ibanInput,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 187\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 193\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"bottone\",\n        type: \"submit\",\n        children: \" Invia\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Signup, \"PEEtGOKKfQQHQdftsmudMWO2aqU=\");\n\n_c = Signup;\nexport default Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["/Users/giuseppe/Desktop/progettoAlexCaraffi/frontend/src/js/Signup.js"],"names":["sha3_512","useRef","axios","defaults","withCredentials","controllaEmail","input","includes","controllaPassword","length","controllaIban","Signup","emailInput","nomeInput","cognomeInput","ibanInput","passwordInput","password2Input","handleLoginForm","e","preventDefault","url","email","current","value","nome","cognome","iban","password2","password","alert","corpo","risposta","post","oggetto","data","url2","body2","link2","window","location","href","replace","Number"],"mappings":"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","sourcesContent":["import { sha3_512 } from 'js-sha3';\nimport { useRef } from 'react';\nimport '../css/Form.css';\nimport axios from 'axios';\naxios.defaults.withCredentials = true;\n\nexport const controllaEmail = (input = \"\") => input.includes(\"@\"); // controlla che l'input della mail abbia la chiocciola\nexport const controllaPassword = (input = \"\") => input.length === 128; // controlla che l'input della password abbia 128 caratteri\nexport const controllaIban = (input = \"\") => input.length === 27; // controlla che l'input dell'iban abbia 27 caratteri\n\nconst Signup = () => {\n\n    const emailInput = useRef();\n    const nomeInput = useRef();\n    const cognomeInput = useRef();\n    const ibanInput = useRef();\n    const passwordInput = useRef();\n    const password2Input = useRef();\n\n    const handleLoginForm = async (e) => {\n        e.preventDefault(); //evita di ricaricare la pagina\n        const url = \"http://localhost:8000/signup/\";\n\n        const email = emailInput.current.value;\n        const nome = nomeInput.current.value;\n        const cognome = cognomeInput.current.value;\n        const iban = ibanInput.current.value;\n        const password2 = password2Input.current.value;\n        let password = passwordInput.current.value;\n\n        if (password !== password2) {\n            alert(\"le due password devono essere uguali\");\n            return;\n        }\n\n        password = sha3_512(password); //cifro la password\n\n        // controllo la email\n        if (!controllaEmail(email)) {\n            alert(\"La email non è valida\");\n            return;\n        }\n\n        // controllo la password\n        if (!controllaPassword(password)) {\n            alert(\"La password non è valida\");\n            return;\n        }\n\n        // controllo la password\n        if (!controllaIban(iban)) {\n            alert(\"L'iban non è valido\");\n            return;\n        }\n\n        const corpo = {\n            nome: nome,\n            cognome: cognome,\n            iban: iban,\n            email: email, \n            password: password, \n            withCredentials: true\n        }; //creo l'oggetto json da inviare al server\n\n        const risposta = await axios.post(url, corpo);\n        const oggetto = risposta.data;\n\n        alert(oggetto[\"messaggio\"]);\n        \n        if (oggetto[\"isTuttoOk\"]) { // se è tutto ok, mi loggo\n            const url2 = \"http://localhost:8000/login/\";\n            const body2 = {email: email, password: password, withCredentials: true};\n            await axios.post(url2, body2);\n\n            const link2 = window.location.href.replace('/signup', '/home'); //rimando alla pagina principale di login\n            window.location.replace(link2);\n        }\n    }\n\n    return ( \n        <div className=\"divSignup\">\n            <h1>Signup</h1>\n            <form onSubmit = {handleLoginForm}>\n                <input className='testo' type='text' id='nome' name='nome' placeholder='Nome' ref={nomeInput} required /> <br /><br />\n                <input className='testo' type='text' id='cognome' name='cognome' placeholder='Cognome' ref={cognomeInput} required /> <br /><br />\n                <input className='testo' type='email' id='email' name='email' placeholder='Email' ref={emailInput} required /><br /><br />\n                <input className='testo' type='password' id='password' name='password' minLength={Number('8')} placeholder='Password' ref={passwordInput} required /> <br /><br />\n                <input className='testo' type='password' id='password2' name='password2' minLength={Number('8')} placeholder='Reinserisci la password' ref={password2Input} required /> <br /><br />\n                <input className='testo' type='text' id='iban' name='iban' maxLength={Number('27')} minLength={Number('27')} placeholder='IBAN (senza spazi)' ref={ibanInput} required /> <br /><br />\n\n                <button id='bottone' type='submit'> Invia</button>\n            </form>\n        </div>\n    );\n}\n \nexport default Signup;"]},"metadata":{},"sourceType":"module"}